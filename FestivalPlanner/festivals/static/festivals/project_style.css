
/* -----  Variables ----- */

:root {
    --regularColor: silver;
    --modestStandoutColor: ivory;
    --linkColor: green;
    --infoColor: rgb(38 176 38);
    --warningColor: rgb(255 142 0);
    --warningColorYellow: rgb(255 219 0);
    --inputBackground: forestGreen;
    --hoverBackground: darkGreen;
    --focusBackgrond: yellowGreen;
    --errorBlockColor: tomato;
    --errorBlockShadowColor: green;
    --warningBlockColor: var(--warningColor);
    --warningBlockShadowColor: steelBlue;
    --inputDisabledColor: lightGrey;
    --inputDisabledBackground: red;
    --inputDisabledText: grey;
    --errorBackground: red;
    --warningBackground: var(--warningColor);
    --infoHoverBackground: var(--infoColor);
    --warningHoverBackground: rgb(255 79 0);
    --stickyBackground: rgb(30 30 30 / .5);
    --stickyFooterBackground: rgb(10 10 10 / 75%);
    --tableBackground: rgb(0 0 0 / .6);
    --modestBackground: rgb(0 0 38 / .73);
    --screeningBackground: rgb(0 0 0 / .73);
    --screeningBorderWidth: 3px;
    --screeningBorderColor: rgb(0 0 0 / .44);
    --boxShadowColor: rgb(0 0 0 / 1);
    --standoutBoxShadow: -6px 0 var(--boxShadowColor), 1px 1px .5rem var(--boxShadowColor);
    --modestBoxShadow: 0px 8px 16px 0px rgb(0 0 0 / .2);
}

/* ----- Type selectors ----- */

/* Color links green, conform Django style. */
a,
li a,
td a {
    color: var(--linkColor);
}

a:focus {
    color: var(--focusBackgrond)
}

/* Style the h1 header as to stand out within the page.
The h1 header is meant to be used as page title only. */
h1 {
    color: var(--modestStandoutColor);
    text-align: center;
    font-family: copperplate;
}

/* Color most regular elements silver, as to contrast the dark
background pictures. */
p,
small,
label,
h2,
h3,
h4,
li,
div,
span,
table,
th,
td {
    color: var(--regularColor);
    font-family: "trebuchet ms", sans-serif;
}

/* Use b for table head cells. Color these cells a bit brighter than
the regular cells. */
b,
th {
    color: var(--modestStandoutColor);
    text-align: left;
}

/* Static table styling. Color is dependant of the current festival
and is set dynamically. */
table,
th,
td {
    padding: 10px;
    border-collapse: collapse;
    background-color: var(--tableBackground);
    vertical-align: text-top;
}
th.active {
    padding: 0 8px;
}
th.center, td.center {
    text-align: center;
}
th.right, td.right {
    text-align: right;
}

/* Table cell style when containing an input widget */
td.with-submit {
    padding: 0 8px;
}
td.with-submit-center {
    padding: 0 8px;
    text-align: center
}
thead.sticky, tr.sticky, th.sticky {
    position: sticky;
    top: 14pt;
    z-index: 3;
    background-color: var(--stickyBackground);
}

/* Customize the select widget. */
select {
    font-size: large;
    background-color: var(--inputBackground);
    color: var(--modestStandoutColor);
    padding: 14px 20px;
    margin: 8px 0 !important;
    border: none;
    border-radius: 4px;
    cursor: pointer;
}
select:hover {
    background-color: var(--hoverBackground);
}
select:focus {
    background-color: var(--focusBackgrond);
}

/* Completely customize the submit widget, among other things make it
a bit larger. */
input[type=submit] {
    width: 50%;
    font-size: large;
    background: var(--inputBackground);
    color: var(--modestStandoutColor);
    margin: 8px 0;
    padding: 14px 20px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
}

/* Customize the text and password input widgets as to make the text
larger and to create harmony with the submit widget. */
input[type=password],
input[type=text] {
    font-size: large;
    background-color: var(--inputBackground);
    color: var(--modestStandoutColor);
    padding: 7px 20px;
    border: none;
    border-radius: 4px;
}

/* Specifics for in-table input widgets */
input[type=submit].in-table {
    width: 100%;
    padding: 6px 15px;
    font-size: small;
    border-radius: 4px;
}

input[type=submit]:hover,
input[type=password]:hover,
input[type=text]:hover,
input[type=submit].in-table:hover {
    background: var(--hoverBackground);
}

input[type=password]:focus,
input[type=text]:focus {
    background-color: var(--focusBackgrond);
}

input.warning {
    background: var(--warningBackground);
}
input.warning:hover {
    background: var(--warningHoverBackground);
}

input:disabled {
    cursor: default;
    color: var(--inputDisabledColor);
}

input.disabled-warning {
    background: var(--warningBackground) !important;
}
input.disabled-warning:hover {
    background: var(--warningBackground);
}
input.disabled-error {
    background: var(--inputDisabledBackground) !important;
}
input.disabled-error:hover {
    background: var(--inputDisabledBackground);
}

input.smaller {
    width: 25%;
}

/* Include padding and border in the width and height of each element */
* {
  box-sizing: border-box;
}

/* ----- Class selectors ----- */

/* Style for alert reports */
.error {
    color: var(--errorBlockColor);
    text-shadow: 4px 4px 3px var(--errorBlockShadowColor);
    margin-bottom: 2px;
}
.warning {
    color: var(--warningBlockColor);
    text-shadow: 2px 2px 3px var(--warningBlockShadowColor);
    margin-bottom: 2px;
}
.log,
.indent {
    padding-left: 40px;
}
.log {
    font-size: small;
    padding-top: 1px;
    padding-bottom: 0px;
    margin-top: 0px;
    margin-bottom: 0px;
}

/* Style for the app name */
.app {
    display: block;
    color: var(--modestStandoutColor);
    text-align: center;
    margin-top: 8px;
    margin-bottom: 0px;
}

/* Form styles */
.label-8rem {
    display: inline-block;
    min-width: 8rem;"
}

/* Screening day schema grid style */
.day-schema-border {
    border: var(--screeningBorderWidth) solid var(--screeningBorderColor);
}
.day-schema-row {
    background-color: var(--screeningBackground);
    position: relative;
}
.day-schema-screening {
    padding: 0 .5rem;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    background-color: var(--screeningBackground);
    position: absolute;
    top: 0px;
    bottom: 0px;
    /* left should be defined in the template because it is variable */
}
.day-schema-screening-info,
.day-schema-screening-warning {
    margin-right: .1rem;
    padding: 0 .1rem 0 .5rem;
    border-radius: 1rem;
}
.day-schema-screening-info:hover {
    background-color: var(--infoHoverBackground) !important;
}
.day-schema-screening-warning:hover {
    background-color: var(--warningHoverBackground);
}

/* Sticky styles */
.sticky-index {
    position: sticky;
    top: 0;
    background-color: var(--stickyBackground);
}

.sticky-footer {
    position: sticky;
    bottom: 0;
    background-color: var(--stickyFooterBackground);
}
.sticky-left {
    position: sticky;
    left: 0;
    background-color: var(--stickyBackground);
}
.sticky-modest-drop-t-head {
    position: sticky;
    top: 14pt;
    background-color: var(--stickyBackground);
    display: table-cell;
    text-align: left;
    margin: auto;
    width: auto;
    height: auto;
}
.sticky-modest-drop-t-head:hover {
    background-color: var(--hoverBackground);
}
.sticky-modest-drop-t-head-content {
    display: none;
    position: absolute;
    cursor: default;
    background-color: black;
    box-shadow: var(--modestBoxShadow);
    min-width: 200px;
    padding: 6px 8px;
    z-index: 2;
}
.sticky-modest-drop-t-head:hover .sticky-modest-drop-t-head-content {
    display: block;
}


/* ----- Special constructs ----- */

/* Put an element left and one right on the same line */
.row::after {
    content: "";
    clear: both;
    display: table;
}
[class*="col-"] {
    float: left;
    padding: 0px;
}
.col-left {
    width: 50%;
}
.col-left-h2 {
    width: 50%;
    margin-top: 6px;
}
.col-right {
    width: 50%;
    text-align: right;
}
.col-all {
    width: 100%;
    text-align: center;
}

.left-half {
    display: inline-block;
    text-align: left;
    width: 50%;
}
.right-half {
    display: inline-block;
    text-align: right;
    width: 49%;
    position: absolute;
    right: 1%;
}

/*
Move a part of a line to a new line one higher.
In combination with column-based left and right alignment, this will look better
on a small screen and will allow for a one-line sticky header on a small screen.
*/
div.up {
    text-align: right;
}
span.up {
    text-align: right;
}
@media screen and (min-width: 601px) {
    div.up {
        display: none;
    }
}
@media screen and (max-width: 600px) {
    span.up {
        display: none;
    }
}

/* ----- Class selectors continued ----- */
/* --- Definitions for dropdowns that present choices --- */

/* The container <div> - needed to position the dropdown content */
.choices-dropdown,
.cell-dropdown {
    position: relative;
    display: block;
    background: var(--inputBackground);
    text-align: center;
    margin: auto;
    width: auto;
    height: auto;
}
.cell-dropdown {
    display: table-cell;
}

.choices-dropdown:hover,
.cell-dropdown:hover {
    background: var(--hoverBackground);
}

/* Style the dropdown button */
.drop-button {
    position: relative;
    color: var(--modestStandoutColor);
    background: transparent;
    margin: auto;
    padding: 2px;
    font-size: 16px;
    border: none;
    cursor: pointer;
}

/* Dropdown content (hidden by default) */
.choices-dropdown-content,
.cell-dropdown-content {
    display: none;
    position: absolute;
    cursor: pointer;
    background: var(--inputBackground);
    box-shadow: var(--modestBoxShadow);
    width: auto;
    padding: .3rem .4rem;
    z-index: 4;
}
.cell-dropdown-content {
    top: 30%;
    left: 70%;
}

/* Inputs inside the dropdown */
.choices-dropdown-content,
.cell-dropdown-content {
    input {
        display: block;
        width: 100%;
        z-index: 4;
        padding: .3rem .5rem;
        margin: 0;
        text-decoration: none;
        text-align: left;
    }
}
.choices-dropdown-content,
.cell-dropdown-content {
    input:hover {
        background: var(--hoverBackground)
    }
}

/* Show the dropdown menu on hover */
.choices-dropdown:hover .choices-dropdown-content {
    display: inline-grid;
}
.cell-dropdown:hover .cell-dropdown-content {
    display: inline-grid;
}

/* Change the background color of the dropdown button when the dropdown content is shown */
.choices-dropdown:hover,
.cell-dropdown:hover {
    .drop-button {
        background: var(--hoverBackground);
    }
}


.inline-dropdown-addition {
    display: inline !important;
    padding: .5rem;
    font-size: 1rem
}
.standout-box-addition {
    box-shadow: var(--standoutBoxShadow);
}


/* Definitions for dropdowns that display a single pane */
.simple-dropdown,
.standout-dropdown,
.in-screening-dropdown {
    position: relative;
    display: table-cell;
    background: var(--modestBackground);
    text-align: left;
    margin: auto;
    width: auto;
    height: auto;
}
.in-screening-dropdown {
    background: var(--warningColorYellow);
    font-size: .6rem;
    text-align: center;
    margin-top: .1rem;
    margin-right: .2rem;
    padding: 0 .1rem 0 .3rem;
    border-radius: .8rem;
}

.simple-dropdown:hover,
.standout-dropdown:hover {
    background: var(--hoverBackground);
}
.in-screening-dropdown:hover {
    background: var(--warningBackground);
}

/* Styles for the dropdown button of single pane dropdowns */
.active-text,
.header-active-text,
.in-screening-active-text {
    color: var(--regularColor);
    text-decoration-line: underline;
    text-decoration-style: dashed;
}
.header-active-text {
    color: var(--modestStandoutColor);
}
.in-screening-active-text {
    color: black;
}

.simple-dropdown-content,
.standout-dropdown-content,
.in-screening-dropdown-content {
    display: none;
    position: absolute;
    top: 70%;
    left: 30%;
    cursor: default;
    background: black;
    box-shadow: var(--modestBoxShadow);
    padding: 0.15rem;
    z-index: 4;
}
.standout-dropdown-content {
    top: 90%;
    left: 0.5rem;
    box-shadow: var(--standoutBoxShadow);
    min-width: 60rem;
    margin-left: 0.5rem;
}
.in-screening-dropdown-content {
    top: .5rem;
    background: blue;
    margin: 0;
    padding: .1rem .5rem;
    border-radius: 1rem;
    font-size: 0.6rem;
    z-index: 2;
    animation: ticker 4s linear 800ms;
}

.simple-dropdown:hover .simple-dropdown-content {
    display: block;
}
.standout-dropdown:hover .standout-dropdown-content {
    display: block;
}
.in-screening-dropdown:hover .in-screening-dropdown-content {
    display: block;
}

.link-in-dropdown {
    display: block;
    width: 100%;
    font-weight: lighter;
    color: var(--modestStandoutColor);
    margin: 0;
    padding: .3rem .5rem;
    border: none;
    border-radius: 4px;
    text-align: left;
}
.link-in-dropdown:hover {
    background-color: var(--hoverBackground)
}


/* Classes for floating elements */

.floating-warning-box {
    position: fixed;
    right: 1rem;
    top: 1.2rem;
    z-index: 4;
    padding: .5rem;
    background: var(--warningColorYellow);
    border-radius: 1rem;
}
.floating-warning-box:hover {
    background: var(--warningColor);
}

/* Descendant combinators for different input states */
.right-aligned-input {
}
.right-aligned-input input {
    text-align: right;
}
.right-aligned-input input:hover {
    background: var(--hoverBackground);
}

/* Placing this here seems to overwrite the hover rules of dropdown content */
input[type=submit]:disabled {
    background: var(--inputBackground);
}

/* Make a submit button transparent ans as small as possible */
.hidden-submit {
    opacity: 0;
    font-size: xx-small !important;
    padding: 0 !important;
    margin: 0 !important;
}

/* Style of disabled element */
.disabled-color {
    cursor: default;
    font-weight: normal;
    color: var(--inputDisabledText);
}

/* Disable text selection */
.no-select {
    user-select: none;
    -webkit-user-select: none;
    -webkit-touch-callout: none;
    cursor: default;
}
